version: 3

tasks:
  install:
    desc: Install
    cmds:
      - pnpm install && pnpm prune

  build:
    desc: Build
    deps: [ install ]
    cmds:
      - pnpm run build

  test:
    desc: Test
    deps: [ install ]
    cmds:
      - pnpm run test

  build-smile-cli:
    cmds:
      - docker build -t smile-cli:latest github.com/ngyewch/smile-cli
      #- docker build -t smile-cli:latest ../smile-cli

  generateTestData:
    desc: Generate test data
    deps: [ build-smile-cli ]
    cmds:
      - docker run -it
        --user $(id -u):$(id -g)
        -v $(pwd)/../../sfackler/serde-smile/tests:/data/input
        -v $(pwd)/testdata/serde-smile:/data/output
        smile-cli:latest encode -r --wrapped --copy-source
        --parse-files-as big_decimal/*.json=big_decimal
        --parse-files-as big_integer/*.json=big_integer
        --parse-files-as binary/*.json=binary
        --parse-files-as boolean/*.json=boolean
        --parse-files-as double/*.json=double
        --parse-files-as float/*.json=float
        --parse-files-as integer/*.json=integer
        --parse-files-as long/*.json=long
        --parse-files-as string/*.json=string
        /data/input /data/output
      - docker run -it
        --user $(id -u):$(id -g)
        -v $(pwd)/testdata/basic:/data/input
        -v $(pwd)/testdata/basic:/data/output
        smile-cli:latest encode -r --wrapped
        /data/input /data/output

  site-clean:
    desc: Clean site
    cmds:
      - rm -rf build/gh-pages

  site-build:
    desc: Build site
    cmds:
      - task: site-clean
      - mkdir -p build/gh-pages
      - task: site-build-mdbook
      - task: site-build-typedoc

  site-deploy:
    desc: Deploy site
    deps: [ site-build ]
    cmds:
      - gh-pages -d build/gh-pages --nojekyll

  site-build-mdbook:
    desc: Generate mdbook
    cmds:
      - mdbook build --dest-dir $(pwd)/build/gh-pages docs/mdbook

  site-build-typedoc:
    desc: Generate typedoc
    cmds:
      - pnpm run typedoc
