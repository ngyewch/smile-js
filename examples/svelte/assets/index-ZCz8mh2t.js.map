{"version":3,"file":"index-ZCz8mh2t.js","sources":["../../node_modules/.pnpm/svelte@4.2.18/node_modules/svelte/src/runtime/internal/utils.js","../../node_modules/.pnpm/svelte@4.2.18/node_modules/svelte/src/runtime/internal/dom.js","../../node_modules/.pnpm/svelte@4.2.18/node_modules/svelte/src/runtime/internal/lifecycle.js","../../node_modules/.pnpm/svelte@4.2.18/node_modules/svelte/src/runtime/internal/scheduler.js","../../node_modules/.pnpm/svelte@4.2.18/node_modules/svelte/src/runtime/internal/transitions.js","../../node_modules/.pnpm/svelte@4.2.18/node_modules/svelte/src/runtime/internal/Component.js","../../node_modules/.pnpm/svelte@4.2.18/node_modules/svelte/src/shared/version.js","../../node_modules/.pnpm/svelte@4.2.18/node_modules/svelte/src/runtime/internal/disclose-version/index.js","../../node_modules/.pnpm/smile-js@0.3.0/node_modules/smile-js/dist/smile-js.js","../../src/App.svelte","../../src/index.ts"],"sourcesContent":["/** @returns {void} */\nexport function noop() {}\n\nexport const identity = (x) => x;\n\n/**\n * @template T\n * @template S\n * @param {T} tar\n * @param {S} src\n * @returns {T & S}\n */\nexport function assign(tar, src) {\n\t// @ts-ignore\n\tfor (const k in src) tar[k] = src[k];\n\treturn /** @type {T & S} */ (tar);\n}\n\n// Adapted from https://github.com/then/is-promise/blob/master/index.js\n// Distributed under MIT License https://github.com/then/is-promise/blob/master/LICENSE\n/**\n * @param {any} value\n * @returns {value is PromiseLike<any>}\n */\nexport function is_promise(value) {\n\treturn (\n\t\t!!value &&\n\t\t(typeof value === 'object' || typeof value === 'function') &&\n\t\ttypeof (/** @type {any} */ (value).then) === 'function'\n\t);\n}\n\n/** @returns {void} */\nexport function add_location(element, file, line, column, char) {\n\telement.__svelte_meta = {\n\t\tloc: { file, line, column, char }\n\t};\n}\n\nexport function run(fn) {\n\treturn fn();\n}\n\nexport function blank_object() {\n\treturn Object.create(null);\n}\n\n/**\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function run_all(fns) {\n\tfns.forEach(run);\n}\n\n/**\n * @param {any} thing\n * @returns {thing is Function}\n */\nexport function is_function(thing) {\n\treturn typeof thing === 'function';\n}\n\n/** @returns {boolean} */\nexport function safe_not_equal(a, b) {\n\treturn a != a ? b == b : a !== b || (a && typeof a === 'object') || typeof a === 'function';\n}\n\nlet src_url_equal_anchor;\n\n/**\n * @param {string} element_src\n * @param {string} url\n * @returns {boolean}\n */\nexport function src_url_equal(element_src, url) {\n\tif (element_src === url) return true;\n\tif (!src_url_equal_anchor) {\n\t\tsrc_url_equal_anchor = document.createElement('a');\n\t}\n\t// This is actually faster than doing URL(..).href\n\tsrc_url_equal_anchor.href = url;\n\treturn element_src === src_url_equal_anchor.href;\n}\n\n/** @param {string} srcset */\nfunction split_srcset(srcset) {\n\treturn srcset.split(',').map((src) => src.trim().split(' ').filter(Boolean));\n}\n\n/**\n * @param {HTMLSourceElement | HTMLImageElement} element_srcset\n * @param {string | undefined | null} srcset\n * @returns {boolean}\n */\nexport function srcset_url_equal(element_srcset, srcset) {\n\tconst element_urls = split_srcset(element_srcset.srcset);\n\tconst urls = split_srcset(srcset || '');\n\n\treturn (\n\t\turls.length === element_urls.length &&\n\t\turls.every(\n\t\t\t([url, width], i) =>\n\t\t\t\twidth === element_urls[i][1] &&\n\t\t\t\t// We need to test both ways because Vite will create an a full URL with\n\t\t\t\t// `new URL(asset, import.meta.url).href` for the client when `base: './'`, and the\n\t\t\t\t// relative URLs inside srcset are not automatically resolved to absolute URLs by\n\t\t\t\t// browsers (in contrast to img.src). This means both SSR and DOM code could\n\t\t\t\t// contain relative or absolute URLs.\n\t\t\t\t(src_url_equal(element_urls[i][0], url) || src_url_equal(url, element_urls[i][0]))\n\t\t)\n\t);\n}\n\n/** @returns {boolean} */\nexport function not_equal(a, b) {\n\treturn a != a ? b == b : a !== b;\n}\n\n/** @returns {boolean} */\nexport function is_empty(obj) {\n\treturn Object.keys(obj).length === 0;\n}\n\n/** @returns {void} */\nexport function validate_store(store, name) {\n\tif (store != null && typeof store.subscribe !== 'function') {\n\t\tthrow new Error(`'${name}' is not a store with a 'subscribe' method`);\n\t}\n}\n\nexport function subscribe(store, ...callbacks) {\n\tif (store == null) {\n\t\tfor (const callback of callbacks) {\n\t\t\tcallback(undefined);\n\t\t}\n\t\treturn noop;\n\t}\n\tconst unsub = store.subscribe(...callbacks);\n\treturn unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\n\n/**\n * Get the current value from a store by subscribing and immediately unsubscribing.\n *\n * https://svelte.dev/docs/svelte-store#get\n * @template T\n * @param {import('../store/public.js').Readable<T>} store\n * @returns {T}\n */\nexport function get_store_value(store) {\n\tlet value;\n\tsubscribe(store, (_) => (value = _))();\n\treturn value;\n}\n\n/** @returns {void} */\nexport function component_subscribe(component, store, callback) {\n\tcomponent.$$.on_destroy.push(subscribe(store, callback));\n}\n\nexport function create_slot(definition, ctx, $$scope, fn) {\n\tif (definition) {\n\t\tconst slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n\t\treturn definition[0](slot_ctx);\n\t}\n}\n\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n\treturn definition[1] && fn ? assign($$scope.ctx.slice(), definition[1](fn(ctx))) : $$scope.ctx;\n}\n\nexport function get_slot_changes(definition, $$scope, dirty, fn) {\n\tif (definition[2] && fn) {\n\t\tconst lets = definition[2](fn(dirty));\n\t\tif ($$scope.dirty === undefined) {\n\t\t\treturn lets;\n\t\t}\n\t\tif (typeof lets === 'object') {\n\t\t\tconst merged = [];\n\t\t\tconst len = Math.max($$scope.dirty.length, lets.length);\n\t\t\tfor (let i = 0; i < len; i += 1) {\n\t\t\t\tmerged[i] = $$scope.dirty[i] | lets[i];\n\t\t\t}\n\t\t\treturn merged;\n\t\t}\n\t\treturn $$scope.dirty | lets;\n\t}\n\treturn $$scope.dirty;\n}\n\n/** @returns {void} */\nexport function update_slot_base(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tslot_changes,\n\tget_slot_context_fn\n) {\n\tif (slot_changes) {\n\t\tconst slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n\t\tslot.p(slot_context, slot_changes);\n\t}\n}\n\n/** @returns {void} */\nexport function update_slot(\n\tslot,\n\tslot_definition,\n\tctx,\n\t$$scope,\n\tdirty,\n\tget_slot_changes_fn,\n\tget_slot_context_fn\n) {\n\tconst slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n\tupdate_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\n\n/** @returns {any[] | -1} */\nexport function get_all_dirty_from_scope($$scope) {\n\tif ($$scope.ctx.length > 32) {\n\t\tconst dirty = [];\n\t\tconst length = $$scope.ctx.length / 32;\n\t\tfor (let i = 0; i < length; i++) {\n\t\t\tdirty[i] = -1;\n\t\t}\n\t\treturn dirty;\n\t}\n\treturn -1;\n}\n\n/** @returns {{}} */\nexport function exclude_internal_props(props) {\n\tconst result = {};\n\tfor (const k in props) if (k[0] !== '$') result[k] = props[k];\n\treturn result;\n}\n\n/** @returns {{}} */\nexport function compute_rest_props(props, keys) {\n\tconst rest = {};\n\tkeys = new Set(keys);\n\tfor (const k in props) if (!keys.has(k) && k[0] !== '$') rest[k] = props[k];\n\treturn rest;\n}\n\n/** @returns {{}} */\nexport function compute_slots(slots) {\n\tconst result = {};\n\tfor (const key in slots) {\n\t\tresult[key] = true;\n\t}\n\treturn result;\n}\n\n/** @returns {(this: any, ...args: any[]) => void} */\nexport function once(fn) {\n\tlet ran = false;\n\treturn function (...args) {\n\t\tif (ran) return;\n\t\tran = true;\n\t\tfn.call(this, ...args);\n\t};\n}\n\nexport function null_to_empty(value) {\n\treturn value == null ? '' : value;\n}\n\nexport function set_store_value(store, ret, value) {\n\tstore.set(value);\n\treturn ret;\n}\n\nexport const has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\n\nexport function action_destroyer(action_result) {\n\treturn action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\n/** @param {number | string} value\n * @returns {[number, string]}\n */\nexport function split_css_unit(value) {\n\tconst split = typeof value === 'string' && value.match(/^\\s*(-?[\\d.]+)([^\\s]*)\\s*$/);\n\treturn split ? [parseFloat(split[1]), split[2] || 'px'] : [/** @type {number} */ (value), 'px'];\n}\n\nexport const contenteditable_truthy_values = ['', true, 1, 'true', 'contenteditable'];\n","import { contenteditable_truthy_values, has_prop } from './utils.js';\n\nimport { ResizeObserverSingleton } from './ResizeObserverSingleton.js';\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\n\n/**\n * @returns {void}\n */\nexport function start_hydrating() {\n\tis_hydrating = true;\n}\n\n/**\n * @returns {void}\n */\nexport function end_hydrating() {\n\tis_hydrating = false;\n}\n\n/**\n * @param {number} low\n * @param {number} high\n * @param {(index: number) => number} key\n * @param {number} value\n * @returns {number}\n */\nfunction upper_bound(low, high, key, value) {\n\t// Return first index of value larger than input value in the range [low, high)\n\twhile (low < high) {\n\t\tconst mid = low + ((high - low) >> 1);\n\t\tif (key(mid) <= value) {\n\t\t\tlow = mid + 1;\n\t\t} else {\n\t\t\thigh = mid;\n\t\t}\n\t}\n\treturn low;\n}\n\n/**\n * @param {NodeEx} target\n * @returns {void}\n */\nfunction init_hydrate(target) {\n\tif (target.hydrate_init) return;\n\ttarget.hydrate_init = true;\n\t// We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n\n\tlet children = /** @type {ArrayLike<NodeEx2>} */ (target.childNodes);\n\t// If target is <head>, there may be children without claim_order\n\tif (target.nodeName === 'HEAD') {\n\t\tconst my_children = [];\n\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\tconst node = children[i];\n\t\t\tif (node.claim_order !== undefined) {\n\t\t\t\tmy_children.push(node);\n\t\t\t}\n\t\t}\n\t\tchildren = my_children;\n\t}\n\t/*\n\t * Reorder claimed children optimally.\n\t * We can reorder claimed children optimally by finding the longest subsequence of\n\t * nodes that are already claimed in order and only moving the rest. The longest\n\t * subsequence of nodes that are claimed in order can be found by\n\t * computing the longest increasing subsequence of .claim_order values.\n\t *\n\t * This algorithm is optimal in generating the least amount of reorder operations\n\t * possible.\n\t *\n\t * Proof:\n\t * We know that, given a set of reordering operations, the nodes that do not move\n\t * always form an increasing subsequence, since they do not move among each other\n\t * meaning that they must be already ordered among each other. Thus, the maximal\n\t * set of nodes that do not move form a longest increasing subsequence.\n\t */\n\t// Compute longest increasing subsequence\n\t// m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n\tconst m = new Int32Array(children.length + 1);\n\t// Predecessor indices + 1\n\tconst p = new Int32Array(children.length);\n\tm[0] = -1;\n\tlet longest = 0;\n\tfor (let i = 0; i < children.length; i++) {\n\t\tconst current = children[i].claim_order;\n\t\t// Find the largest subsequence length such that it ends in a value less than our current value\n\t\t// upper_bound returns first greater value, so we subtract one\n\t\t// with fast path for when we are on the current longest subsequence\n\t\tconst seq_len =\n\t\t\t(longest > 0 && children[m[longest]].claim_order <= current\n\t\t\t\t? longest + 1\n\t\t\t\t: upper_bound(1, longest, (idx) => children[m[idx]].claim_order, current)) - 1;\n\t\tp[i] = m[seq_len] + 1;\n\t\tconst new_len = seq_len + 1;\n\t\t// We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n\t\tm[new_len] = i;\n\t\tlongest = Math.max(new_len, longest);\n\t}\n\t// The longest increasing subsequence of nodes (initially reversed)\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst lis = [];\n\t// The rest of the nodes, nodes that will be moved\n\n\t/**\n\t * @type {NodeEx2[]}\n\t */\n\tconst to_move = [];\n\tlet last = children.length - 1;\n\tfor (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n\t\tlis.push(children[cur - 1]);\n\t\tfor (; last >= cur; last--) {\n\t\t\tto_move.push(children[last]);\n\t\t}\n\t\tlast--;\n\t}\n\tfor (; last >= 0; last--) {\n\t\tto_move.push(children[last]);\n\t}\n\tlis.reverse();\n\t// We sort the nodes being moved to guarantee that their insertion order matches the claim order\n\tto_move.sort((a, b) => a.claim_order - b.claim_order);\n\t// Finally, we move the nodes\n\tfor (let i = 0, j = 0; i < to_move.length; i++) {\n\t\twhile (j < lis.length && to_move[i].claim_order >= lis[j].claim_order) {\n\t\t\tj++;\n\t\t}\n\t\tconst anchor = j < lis.length ? lis[j] : null;\n\t\ttarget.insertBefore(to_move[i], anchor);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @returns {void}\n */\nexport function append(target, node) {\n\ttarget.appendChild(node);\n}\n\n/**\n * @param {Node} target\n * @param {string} style_sheet_id\n * @param {string} styles\n * @returns {void}\n */\nexport function append_styles(target, style_sheet_id, styles) {\n\tconst append_styles_to = get_root_for_style(target);\n\tif (!append_styles_to.getElementById(style_sheet_id)) {\n\t\tconst style = element('style');\n\t\tstyle.id = style_sheet_id;\n\t\tstyle.textContent = styles;\n\t\tappend_stylesheet(append_styles_to, style);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {ShadowRoot | Document}\n */\nexport function get_root_for_style(node) {\n\tif (!node) return document;\n\tconst root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n\tif (root && /** @type {ShadowRoot} */ (root).host) {\n\t\treturn /** @type {ShadowRoot} */ (root);\n\t}\n\treturn node.ownerDocument;\n}\n\n/**\n * @param {Node} node\n * @returns {CSSStyleSheet}\n */\nexport function append_empty_stylesheet(node) {\n\tconst style_element = element('style');\n\t// For transitions to work without 'style-src: unsafe-inline' Content Security Policy,\n\t// these empty tags need to be allowed with a hash as a workaround until we move to the Web Animations API.\n\t// Using the hash for the empty string (for an empty tag) works in all browsers except Safari.\n\t// So as a workaround for the workaround, when we append empty style tags we set their content to /* empty */.\n\t// The hash 'sha256-9OlNO0DNEeaVzHL4RZwCLsBHA8WBQ8toBp/4F5XV2nc=' will then work even in Safari.\n\tstyle_element.textContent = '/* empty */';\n\tappend_stylesheet(get_root_for_style(node), style_element);\n\treturn style_element.sheet;\n}\n\n/**\n * @param {ShadowRoot | Document} node\n * @param {HTMLStyleElement} style\n * @returns {CSSStyleSheet}\n */\nfunction append_stylesheet(node, style) {\n\tappend(/** @type {Document} */ (node).head || node, style);\n\treturn style.sheet;\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @returns {void}\n */\nexport function append_hydration(target, node) {\n\tif (is_hydrating) {\n\t\tinit_hydrate(target);\n\t\tif (\n\t\t\ttarget.actual_end_child === undefined ||\n\t\t\t(target.actual_end_child !== null && target.actual_end_child.parentNode !== target)\n\t\t) {\n\t\t\ttarget.actual_end_child = target.firstChild;\n\t\t}\n\t\t// Skip nodes of undefined ordering\n\t\twhile (target.actual_end_child !== null && target.actual_end_child.claim_order === undefined) {\n\t\t\ttarget.actual_end_child = target.actual_end_child.nextSibling;\n\t\t}\n\t\tif (node !== target.actual_end_child) {\n\t\t\t// We only insert if the ordering of this node should be modified or the parent node is not target\n\t\t\tif (node.claim_order !== undefined || node.parentNode !== target) {\n\t\t\t\ttarget.insertBefore(node, target.actual_end_child);\n\t\t\t}\n\t\t} else {\n\t\t\ttarget.actual_end_child = node.nextSibling;\n\t\t}\n\t} else if (node.parentNode !== target || node.nextSibling !== null) {\n\t\ttarget.appendChild(node);\n\t}\n}\n\n/**\n * @param {Node} target\n * @param {Node} node\n * @param {Node} [anchor]\n * @returns {void}\n */\nexport function insert(target, node, anchor) {\n\ttarget.insertBefore(node, anchor || null);\n}\n\n/**\n * @param {NodeEx} target\n * @param {NodeEx} node\n * @param {NodeEx} [anchor]\n * @returns {void}\n */\nexport function insert_hydration(target, node, anchor) {\n\tif (is_hydrating && !anchor) {\n\t\tappend_hydration(target, node);\n\t} else if (node.parentNode !== target || node.nextSibling != anchor) {\n\t\ttarget.insertBefore(node, anchor || null);\n\t}\n}\n\n/**\n * @param {Node} node\n * @returns {void}\n */\nexport function detach(node) {\n\tif (node.parentNode) {\n\t\tnode.parentNode.removeChild(node);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function destroy_each(iterations, detaching) {\n\tfor (let i = 0; i < iterations.length; i += 1) {\n\t\tif (iterations[i]) iterations[i].d(detaching);\n\t}\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element(name) {\n\treturn document.createElement(name);\n}\n\n/**\n * @template {keyof HTMLElementTagNameMap} K\n * @param {K} name\n * @param {string} is\n * @returns {HTMLElementTagNameMap[K]}\n */\nexport function element_is(name, is) {\n\treturn document.createElement(name, { is });\n}\n\n/**\n * @template T\n * @template {keyof T} K\n * @param {T} obj\n * @param {K[]} exclude\n * @returns {Pick<T, Exclude<keyof T, K>>}\n */\nexport function object_without_properties(obj, exclude) {\n\tconst target = /** @type {Pick<T, Exclude<keyof T, K>>} */ ({});\n\tfor (const k in obj) {\n\t\tif (\n\t\t\thas_prop(obj, k) &&\n\t\t\t// @ts-ignore\n\t\t\texclude.indexOf(k) === -1\n\t\t) {\n\t\t\t// @ts-ignore\n\t\t\ttarget[k] = obj[k];\n\t\t}\n\t}\n\treturn target;\n}\n\n/**\n * @template {keyof SVGElementTagNameMap} K\n * @param {K} name\n * @returns {SVGElement}\n */\nexport function svg_element(name) {\n\treturn document.createElementNS('http://www.w3.org/2000/svg', name);\n}\n\n/**\n * @param {string} data\n * @returns {Text}\n */\nexport function text(data) {\n\treturn document.createTextNode(data);\n}\n\n/**\n * @returns {Text} */\nexport function space() {\n\treturn text(' ');\n}\n\n/**\n * @returns {Text} */\nexport function empty() {\n\treturn text('');\n}\n\n/**\n * @param {string} content\n * @returns {Comment}\n */\nexport function comment(content) {\n\treturn document.createComment(content);\n}\n\n/**\n * @param {EventTarget} node\n * @param {string} event\n * @param {EventListenerOrEventListenerObject} handler\n * @param {boolean | AddEventListenerOptions | EventListenerOptions} [options]\n * @returns {() => void}\n */\nexport function listen(node, event, handler, options) {\n\tnode.addEventListener(event, handler, options);\n\treturn () => node.removeEventListener(event, handler, options);\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function prevent_default(fn) {\n\treturn function (event) {\n\t\tevent.preventDefault();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopPropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => any} */\nexport function stop_immediate_propagation(fn) {\n\treturn function (event) {\n\t\tevent.stopImmediatePropagation();\n\t\t// @ts-ignore\n\t\treturn fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function self(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.target === this) fn.call(this, event);\n\t};\n}\n\n/**\n * @returns {(event: any) => void} */\nexport function trusted(fn) {\n\treturn function (event) {\n\t\t// @ts-ignore\n\t\tif (event.isTrusted) fn.call(this, event);\n\t};\n}\n\n/**\n * @param {Element} node\n * @param {string} attribute\n * @param {string} [value]\n * @returns {void}\n */\nexport function attr(node, attribute, value) {\n\tif (value == null) node.removeAttribute(attribute);\n\telse if (node.getAttribute(attribute) !== value) node.setAttribute(attribute, value);\n}\n/**\n * List of attributes that should always be set through the attr method,\n * because updating them through the property setter doesn't work reliably.\n * In the example of `width`/`height`, the problem is that the setter only\n * accepts numeric values, but the attribute can also be set to a string like `50%`.\n * If this list becomes too big, rethink this approach.\n */\nconst always_set_through_set_attribute = ['width', 'height'];\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_attributes(node, attributes) {\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n\tfor (const key in attributes) {\n\t\tif (attributes[key] == null) {\n\t\t\tnode.removeAttribute(key);\n\t\t} else if (key === 'style') {\n\t\t\tnode.style.cssText = attributes[key];\n\t\t} else if (key === '__value') {\n\t\t\t/** @type {any} */ (node).value = node[key] = attributes[key];\n\t\t} else if (\n\t\t\tdescriptors[key] &&\n\t\t\tdescriptors[key].set &&\n\t\t\talways_set_through_set_attribute.indexOf(key) === -1\n\t\t) {\n\t\t\tnode[key] = attributes[key];\n\t\t} else {\n\t\t\tattr(node, key, attributes[key]);\n\t\t}\n\t}\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {{ [x: string]: string }} attributes\n * @returns {void}\n */\nexport function set_svg_attributes(node, attributes) {\n\tfor (const key in attributes) {\n\t\tattr(node, key, attributes[key]);\n\t}\n}\n\n/**\n * @param {Record<string, unknown>} data_map\n * @returns {void}\n */\nexport function set_custom_element_data_map(node, data_map) {\n\tObject.keys(data_map).forEach((key) => {\n\t\tset_custom_element_data(node, key, data_map[key]);\n\t});\n}\n\n/**\n * @returns {void} */\nexport function set_custom_element_data(node, prop, value) {\n\tconst lower = prop.toLowerCase(); // for backwards compatibility with existing behavior we do lowercase first\n\tif (lower in node) {\n\t\tnode[lower] = typeof node[lower] === 'boolean' && value === '' ? true : value;\n\t} else if (prop in node) {\n\t\tnode[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n\t} else {\n\t\tattr(node, prop, value);\n\t}\n}\n\n/**\n * @param {string} tag\n */\nexport function set_dynamic_element_data(tag) {\n\treturn /-/.test(tag) ? set_custom_element_data_map : set_attributes;\n}\n\n/**\n * @returns {void}\n */\nexport function xlink_attr(node, attribute, value) {\n\tnode.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\n\n/**\n * @param {HTMLElement} node\n * @returns {string}\n */\nexport function get_svelte_dataset(node) {\n\treturn node.dataset.svelteH;\n}\n\n/**\n * @returns {unknown[]} */\nexport function get_binding_group_value(group, __value, checked) {\n\tconst value = new Set();\n\tfor (let i = 0; i < group.length; i += 1) {\n\t\tif (group[i].checked) value.add(group[i].__value);\n\t}\n\tif (!checked) {\n\t\tvalue.delete(__value);\n\t}\n\treturn Array.from(value);\n}\n\n/**\n * @param {HTMLInputElement[]} group\n * @returns {{ p(...inputs: HTMLInputElement[]): void; r(): void; }}\n */\nexport function init_binding_group(group) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\treturn {\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\t_inputs.forEach((input) => group.push(input));\n\t\t},\n\t\t/* remove */ r() {\n\t\t\t_inputs.forEach((input) => group.splice(group.indexOf(input), 1));\n\t\t}\n\t};\n}\n\n/**\n * @param {number[]} indexes\n * @returns {{ u(new_indexes: number[]): void; p(...inputs: HTMLInputElement[]): void; r: () => void; }}\n */\nexport function init_binding_group_dynamic(group, indexes) {\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _group = get_binding_group(group);\n\n\t/**\n\t * @type {HTMLInputElement[]} */\n\tlet _inputs;\n\n\tfunction get_binding_group(group) {\n\t\tfor (let i = 0; i < indexes.length; i++) {\n\t\t\tgroup = group[indexes[i]] = group[indexes[i]] || [];\n\t\t}\n\t\treturn group;\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction push() {\n\t\t_inputs.forEach((input) => _group.push(input));\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction remove() {\n\t\t_inputs.forEach((input) => _group.splice(_group.indexOf(input), 1));\n\t}\n\treturn {\n\t\t/* update */ u(new_indexes) {\n\t\t\tindexes = new_indexes;\n\t\t\tconst new_group = get_binding_group(group);\n\t\t\tif (new_group !== _group) {\n\t\t\t\tremove();\n\t\t\t\t_group = new_group;\n\t\t\t\tpush();\n\t\t\t}\n\t\t},\n\t\t/* push */ p(...inputs) {\n\t\t\t_inputs = inputs;\n\t\t\tpush();\n\t\t},\n\t\t/* remove */ r: remove\n\t};\n}\n\n/** @returns {number} */\nexport function to_number(value) {\n\treturn value === '' ? null : +value;\n}\n\n/** @returns {any[]} */\nexport function time_ranges_to_array(ranges) {\n\tconst array = [];\n\tfor (let i = 0; i < ranges.length; i += 1) {\n\t\tarray.push({ start: ranges.start(i), end: ranges.end(i) });\n\t}\n\treturn array;\n}\n\n/**\n * @param {Element} element\n * @returns {ChildNode[]}\n */\nexport function children(element) {\n\treturn Array.from(element.childNodes);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {void}\n */\nfunction init_claim_info(nodes) {\n\tif (nodes.claim_info === undefined) {\n\t\tnodes.claim_info = { last_index: 0, total_claimed: 0 };\n\t}\n}\n\n/**\n * @template {ChildNodeEx} R\n * @param {ChildNodeArray} nodes\n * @param {(node: ChildNodeEx) => node is R} predicate\n * @param {(node: ChildNodeEx) => ChildNodeEx | undefined} process_node\n * @param {() => R} create_node\n * @param {boolean} dont_update_last_index\n * @returns {R}\n */\nfunction claim_node(nodes, predicate, process_node, create_node, dont_update_last_index = false) {\n\t// Try to find nodes in an order such that we lengthen the longest increasing subsequence\n\tinit_claim_info(nodes);\n\tconst result_node = (() => {\n\t\t// We first try to find an element after the previous one\n\t\tfor (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// Otherwise, we try to find one before\n\t\t// We iterate in reverse so that we don't go too far back\n\t\tfor (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n\t\t\tconst node = nodes[i];\n\t\t\tif (predicate(node)) {\n\t\t\t\tconst replacement = process_node(node);\n\t\t\t\tif (replacement === undefined) {\n\t\t\t\t\tnodes.splice(i, 1);\n\t\t\t\t} else {\n\t\t\t\t\tnodes[i] = replacement;\n\t\t\t\t}\n\t\t\t\tif (!dont_update_last_index) {\n\t\t\t\t\tnodes.claim_info.last_index = i;\n\t\t\t\t} else if (replacement === undefined) {\n\t\t\t\t\t// Since we spliced before the last_index, we decrease it\n\t\t\t\t\tnodes.claim_info.last_index--;\n\t\t\t\t}\n\t\t\t\treturn node;\n\t\t\t}\n\t\t}\n\t\t// If we can't find any matching node, we create a new one\n\t\treturn create_node();\n\t})();\n\tresult_node.claim_order = nodes.claim_info.total_claimed;\n\tnodes.claim_info.total_claimed += 1;\n\treturn result_node;\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @param {(name: string) => Element | SVGElement} create_element\n * @returns {Element | SVGElement}\n */\nfunction claim_element_base(nodes, name, attributes, create_element) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Element | SVGElement} */\n\t\t(node) => node.nodeName === name,\n\t\t/** @param {Element} node */\n\t\t(node) => {\n\t\t\tconst remove = [];\n\t\t\tfor (let j = 0; j < node.attributes.length; j++) {\n\t\t\t\tconst attribute = node.attributes[j];\n\t\t\t\tif (!attributes[attribute.name]) {\n\t\t\t\t\tremove.push(attribute.name);\n\t\t\t\t}\n\t\t\t}\n\t\t\tremove.forEach((v) => node.removeAttribute(v));\n\t\t\treturn undefined;\n\t\t},\n\t\t() => create_element(name)\n\t);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @param {string} name\n * @param {{ [key: string]: boolean }} attributes\n * @returns {Element | SVGElement}\n */\nexport function claim_svg_element(nodes, name, attributes) {\n\treturn claim_element_base(nodes, name, attributes, svg_element);\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Text}\n */\nexport function claim_text(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Text} */\n\t\t(node) => node.nodeType === 3,\n\t\t/** @param {Text} node */\n\t\t(node) => {\n\t\t\tconst data_str = '' + data;\n\t\t\tif (node.data.startsWith(data_str)) {\n\t\t\t\tif (node.data.length !== data_str.length) {\n\t\t\t\t\treturn node.splitText(data_str.length);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tnode.data = data_str;\n\t\t\t}\n\t\t},\n\t\t() => text(data),\n\t\ttrue // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n\t);\n}\n\n/**\n * @returns {Text} */\nexport function claim_space(nodes) {\n\treturn claim_text(nodes, ' ');\n}\n\n/**\n * @param {ChildNodeArray} nodes\n * @returns {Comment}\n */\nexport function claim_comment(nodes, data) {\n\treturn claim_node(\n\t\tnodes,\n\t\t/** @returns {node is Comment} */\n\t\t(node) => node.nodeType === 8,\n\t\t/** @param {Comment} node */\n\t\t(node) => {\n\t\t\tnode.data = '' + data;\n\t\t\treturn undefined;\n\t\t},\n\t\t() => comment(data),\n\t\ttrue\n\t);\n}\n\nfunction get_comment_idx(nodes, text, start) {\n\tfor (let i = start; i < nodes.length; i += 1) {\n\t\tconst node = nodes[i];\n\t\tif (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n\t\t\treturn i;\n\t\t}\n\t}\n\treturn -1;\n}\n\n/**\n * @param {boolean} is_svg\n * @returns {HtmlTagHydration}\n */\nexport function claim_html_tag(nodes, is_svg) {\n\t// find html opening tag\n\tconst start_index = get_comment_idx(nodes, 'HTML_TAG_START', 0);\n\tconst end_index = get_comment_idx(nodes, 'HTML_TAG_END', start_index + 1);\n\tif (start_index === -1 || end_index === -1) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\n\tinit_claim_info(nodes);\n\tconst html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n\tdetach(html_tag_nodes[0]);\n\tdetach(html_tag_nodes[html_tag_nodes.length - 1]);\n\tconst claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n\tif (claimed_nodes.length === 0) {\n\t\treturn new HtmlTagHydration(is_svg);\n\t}\n\tfor (const n of claimed_nodes) {\n\t\tn.claim_order = nodes.claim_info.total_claimed;\n\t\tnodes.claim_info.total_claimed += 1;\n\t}\n\treturn new HtmlTagHydration(is_svg, claimed_nodes);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data(text, data) {\n\tdata = '' + data;\n\tif (text.data === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @returns {void}\n */\nexport function set_data_contenteditable(text, data) {\n\tdata = '' + data;\n\tif (text.wholeText === data) return;\n\ttext.data = /** @type {string} */ (data);\n}\n\n/**\n * @param {Text} text\n * @param {unknown} data\n * @param {string} attr_value\n * @returns {void}\n */\nexport function set_data_maybe_contenteditable(text, data, attr_value) {\n\tif (~contenteditable_truthy_values.indexOf(attr_value)) {\n\t\tset_data_contenteditable(text, data);\n\t} else {\n\t\tset_data(text, data);\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_input_value(input, value) {\n\tinput.value = value == null ? '' : value;\n}\n\n/**\n * @returns {void} */\nexport function set_input_type(input, type) {\n\ttry {\n\t\tinput.type = type;\n\t} catch (e) {\n\t\t// do nothing\n\t}\n}\n\n/**\n * @returns {void} */\nexport function set_style(node, key, value, important) {\n\tif (value == null) {\n\t\tnode.style.removeProperty(key);\n\t} else {\n\t\tnode.style.setProperty(key, value, important ? 'important' : '');\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_option(select, value, mounting) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\tif (option.__value === value) {\n\t\t\toption.selected = true;\n\t\t\treturn;\n\t\t}\n\t}\n\tif (!mounting || value !== undefined) {\n\t\tselect.selectedIndex = -1; // no option should be selected\n\t}\n}\n\n/**\n * @returns {void} */\nexport function select_options(select, value) {\n\tfor (let i = 0; i < select.options.length; i += 1) {\n\t\tconst option = select.options[i];\n\t\toption.selected = ~value.indexOf(option.__value);\n\t}\n}\n\nexport function select_value(select) {\n\tconst selected_option = select.querySelector(':checked');\n\treturn selected_option && selected_option.__value;\n}\n\nexport function select_multiple_value(select) {\n\treturn [].map.call(select.querySelectorAll(':checked'), (option) => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\n\n/**\n * @type {boolean} */\nlet crossorigin;\n\n/**\n * @returns {boolean} */\nexport function is_crossorigin() {\n\tif (crossorigin === undefined) {\n\t\tcrossorigin = false;\n\t\ttry {\n\t\t\tif (typeof window !== 'undefined' && window.parent) {\n\t\t\t\tvoid window.parent.document;\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tcrossorigin = true;\n\t\t}\n\t}\n\treturn crossorigin;\n}\n\n/**\n * @param {HTMLElement} node\n * @param {() => void} fn\n * @returns {() => void}\n */\nexport function add_iframe_resize_listener(node, fn) {\n\tconst computed_style = getComputedStyle(node);\n\tif (computed_style.position === 'static') {\n\t\tnode.style.position = 'relative';\n\t}\n\tconst iframe = element('iframe');\n\tiframe.setAttribute(\n\t\t'style',\n\t\t'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n\t\t\t'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;'\n\t);\n\tiframe.setAttribute('aria-hidden', 'true');\n\tiframe.tabIndex = -1;\n\tconst crossorigin = is_crossorigin();\n\n\t/**\n\t * @type {() => void}\n\t */\n\tlet unsubscribe;\n\tif (crossorigin) {\n\t\tiframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n\t\tunsubscribe = listen(\n\t\t\twindow,\n\t\t\t'message',\n\t\t\t/** @param {MessageEvent} event */ (event) => {\n\t\t\t\tif (event.source === iframe.contentWindow) fn();\n\t\t\t}\n\t\t);\n\t} else {\n\t\tiframe.src = 'about:blank';\n\t\tiframe.onload = () => {\n\t\t\tunsubscribe = listen(iframe.contentWindow, 'resize', fn);\n\t\t\t// make sure an initial resize event is fired _after_ the iframe is loaded (which is asynchronous)\n\t\t\t// see https://github.com/sveltejs/svelte/issues/4233\n\t\t\tfn();\n\t\t};\n\t}\n\tappend(node, iframe);\n\treturn () => {\n\t\tif (crossorigin) {\n\t\t\tunsubscribe();\n\t\t} else if (unsubscribe && iframe.contentWindow) {\n\t\t\tunsubscribe();\n\t\t}\n\t\tdetach(iframe);\n\t};\n}\nexport const resize_observer_content_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'content-box'\n});\nexport const resize_observer_border_box = /* @__PURE__ */ new ResizeObserverSingleton({\n\tbox: 'border-box'\n});\nexport const resize_observer_device_pixel_content_box = /* @__PURE__ */ new ResizeObserverSingleton(\n\t{ box: 'device-pixel-content-box' }\n);\nexport { ResizeObserverSingleton };\n\n/**\n * @returns {void} */\nexport function toggle_class(element, name, toggle) {\n\t// The `!!` is required because an `undefined` flag means flipping the current state.\n\telement.classList.toggle(name, !!toggle);\n}\n\n/**\n * @template T\n * @param {string} type\n * @param {T} [detail]\n * @param {{ bubbles?: boolean, cancelable?: boolean }} [options]\n * @returns {CustomEvent<T>}\n */\nexport function custom_event(type, detail, { bubbles = false, cancelable = false } = {}) {\n\treturn new CustomEvent(type, { detail, bubbles, cancelable });\n}\n\n/**\n * @param {string} selector\n * @param {HTMLElement} parent\n * @returns {ChildNodeArray}\n */\nexport function query_selector_all(selector, parent = document.body) {\n\treturn Array.from(parent.querySelectorAll(selector));\n}\n\n/**\n * @param {string} nodeId\n * @param {HTMLElement} head\n * @returns {any[]}\n */\nexport function head_selector(nodeId, head) {\n\tconst result = [];\n\tlet started = 0;\n\tfor (const node of head.childNodes) {\n\t\tif (node.nodeType === 8 /* comment node */) {\n\t\t\tconst comment = node.textContent.trim();\n\t\t\tif (comment === `HEAD_${nodeId}_END`) {\n\t\t\t\tstarted -= 1;\n\t\t\t\tresult.push(node);\n\t\t\t} else if (comment === `HEAD_${nodeId}_START`) {\n\t\t\t\tstarted += 1;\n\t\t\t\tresult.push(node);\n\t\t\t}\n\t\t} else if (started > 0) {\n\t\t\tresult.push(node);\n\t\t}\n\t}\n\treturn result;\n}\n/** */\nexport class HtmlTag {\n\t/**\n\t * @private\n\t * @default false\n\t */\n\tis_svg = false;\n\t/** parent for creating node */\n\te = undefined;\n\t/** html tag nodes */\n\tn = undefined;\n\t/** target */\n\tt = undefined;\n\t/** anchor */\n\ta = undefined;\n\tconstructor(is_svg = false) {\n\t\tthis.is_svg = is_svg;\n\t\tthis.e = this.n = null;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tthis.h(html);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @param {HTMLElement | SVGElement} target\n\t * @param {HTMLElement | SVGElement} anchor\n\t * @returns {void}\n\t */\n\tm(html, target, anchor = null) {\n\t\tif (!this.e) {\n\t\t\tif (this.is_svg)\n\t\t\t\tthis.e = svg_element(/** @type {keyof SVGElementTagNameMap} */ (target.nodeName));\n\t\t\t/** #7364  target for <template> may be provided as #document-fragment(11) */ else\n\t\t\t\tthis.e = element(\n\t\t\t\t\t/** @type {keyof HTMLElementTagNameMap} */ (\n\t\t\t\t\t\ttarget.nodeType === 11 ? 'TEMPLATE' : target.nodeName\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\tthis.t =\n\t\t\t\ttarget.tagName !== 'TEMPLATE'\n\t\t\t\t\t? target\n\t\t\t\t\t: /** @type {HTMLTemplateElement} */ (target).content;\n\t\t\tthis.c(html);\n\t\t}\n\t\tthis.i(anchor);\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\th(html) {\n\t\tthis.e.innerHTML = html;\n\t\tthis.n = Array.from(\n\t\t\tthis.e.nodeName === 'TEMPLATE' ? this.e.content.childNodes : this.e.childNodes\n\t\t);\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert(this.t, this.n[i], anchor);\n\t\t}\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tp(html) {\n\t\tthis.d();\n\t\tthis.h(html);\n\t\tthis.i(this.a);\n\t}\n\n\t/**\n\t * @returns {void} */\n\td() {\n\t\tthis.n.forEach(detach);\n\t}\n}\n\nexport class HtmlTagHydration extends HtmlTag {\n\t/** @type {Element[]} hydration claimed nodes */\n\tl = undefined;\n\n\tconstructor(is_svg = false, claimed_nodes) {\n\t\tsuper(is_svg);\n\t\tthis.e = this.n = null;\n\t\tthis.l = claimed_nodes;\n\t}\n\n\t/**\n\t * @param {string} html\n\t * @returns {void}\n\t */\n\tc(html) {\n\t\tif (this.l) {\n\t\t\tthis.n = this.l;\n\t\t} else {\n\t\t\tsuper.c(html);\n\t\t}\n\t}\n\n\t/**\n\t * @returns {void} */\n\ti(anchor) {\n\t\tfor (let i = 0; i < this.n.length; i += 1) {\n\t\t\tinsert_hydration(this.t, this.n[i], anchor);\n\t\t}\n\t}\n}\n\n/**\n * @param {NamedNodeMap} attributes\n * @returns {{}}\n */\nexport function attribute_to_object(attributes) {\n\tconst result = {};\n\tfor (const attribute of attributes) {\n\t\tresult[attribute.name] = attribute.value;\n\t}\n\treturn result;\n}\n\nconst escaped = {\n\t'\"': '&quot;',\n\t'&': '&amp;',\n\t'<': '&lt;'\n};\n\nconst regex_attribute_characters_to_escape = /[\"&<]/g;\n\n/**\n * Note that the attribute itself should be surrounded in double quotes\n * @param {any} attribute\n */\nfunction escape_attribute(attribute) {\n\treturn String(attribute).replace(regex_attribute_characters_to_escape, (match) => escaped[match]);\n}\n\n/**\n * @param {Record<string, string>} attributes\n */\nexport function stringify_spread(attributes) {\n\tlet str = ' ';\n\tfor (const key in attributes) {\n\t\tif (attributes[key] != null) {\n\t\t\tstr += `${key}=\"${escape_attribute(attributes[key])}\" `;\n\t\t}\n\t}\n\n\treturn str;\n}\n\n/**\n * @param {HTMLElement} element\n * @returns {{}}\n */\nexport function get_custom_elements_slots(element) {\n\tconst result = {};\n\telement.childNodes.forEach(\n\t\t/** @param {Element} node */ (node) => {\n\t\t\tresult[node.slot || 'default'] = true;\n\t\t}\n\t);\n\treturn result;\n}\n\nexport function construct_svelte_component(component, props) {\n\treturn new component(props);\n}\n\n/**\n * @typedef {Node & {\n * \tclaim_order?: number;\n * \thydrate_init?: true;\n * \tactual_end_child?: NodeEx;\n * \tchildNodes: NodeListOf<NodeEx>;\n * }} NodeEx\n */\n\n/** @typedef {ChildNode & NodeEx} ChildNodeEx */\n\n/** @typedef {NodeEx & { claim_order: number }} NodeEx2 */\n\n/**\n * @typedef {ChildNodeEx[] & {\n * \tclaim_info?: {\n * \t\tlast_index: number;\n * \t\ttotal_claimed: number;\n * \t};\n * }} ChildNodeArray\n */\n","import { custom_event } from './dom.js';\n\nexport let current_component;\n\n/** @returns {void} */\nexport function set_current_component(component) {\n\tcurrent_component = component;\n}\n\nexport function get_current_component() {\n\tif (!current_component) throw new Error('Function called outside component initialization');\n\treturn current_component;\n}\n\n/**\n * Schedules a callback to run immediately before the component is updated after any state change.\n *\n * The first time the callback runs will be before the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#beforeupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function beforeUpdate(fn) {\n\tget_current_component().$$.before_update.push(fn);\n}\n\n/**\n * The `onMount` function schedules a callback to run as soon as the component has been mounted to the DOM.\n * It must be called during the component's initialisation (but doesn't need to live *inside* the component;\n * it can be called from an external module).\n *\n * If a function is returned _synchronously_ from `onMount`, it will be called when the component is unmounted.\n *\n * `onMount` does not run inside a [server-side component](https://svelte.dev/docs#run-time-server-side-component-api).\n *\n * https://svelte.dev/docs/svelte#onmount\n * @template T\n * @param {() => import('./private.js').NotFunction<T> | Promise<import('./private.js').NotFunction<T>> | (() => any)} fn\n * @returns {void}\n */\nexport function onMount(fn) {\n\tget_current_component().$$.on_mount.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately after the component has been updated.\n *\n * The first time the callback runs will be after the initial `onMount`\n *\n * https://svelte.dev/docs/svelte#afterupdate\n * @param {() => any} fn\n * @returns {void}\n */\nexport function afterUpdate(fn) {\n\tget_current_component().$$.after_update.push(fn);\n}\n\n/**\n * Schedules a callback to run immediately before the component is unmounted.\n *\n * Out of `onMount`, `beforeUpdate`, `afterUpdate` and `onDestroy`, this is the\n * only one that runs inside a server-side component.\n *\n * https://svelte.dev/docs/svelte#ondestroy\n * @param {() => any} fn\n * @returns {void}\n */\nexport function onDestroy(fn) {\n\tget_current_component().$$.on_destroy.push(fn);\n}\n\n/**\n * Creates an event dispatcher that can be used to dispatch [component events](https://svelte.dev/docs#template-syntax-component-directives-on-eventname).\n * Event dispatchers are functions that can take two arguments: `name` and `detail`.\n *\n * Component events created with `createEventDispatcher` create a\n * [CustomEvent](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent).\n * These events do not [bubble](https://developer.mozilla.org/en-US/docs/Learn/JavaScript/Building_blocks/Events#Event_bubbling_and_capture).\n * The `detail` argument corresponds to the [CustomEvent.detail](https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent/detail)\n * property and can contain any type of data.\n *\n * The event dispatcher can be typed to narrow the allowed event names and the type of the `detail` argument:\n * ```ts\n * const dispatch = createEventDispatcher<{\n *  loaded: never; // does not take a detail argument\n *  change: string; // takes a detail argument of type string, which is required\n *  optional: number | null; // takes an optional detail argument of type number\n * }>();\n * ```\n *\n * https://svelte.dev/docs/svelte#createeventdispatcher\n * @template {Record<string, any>} [EventMap=any]\n * @returns {import('./public.js').EventDispatcher<EventMap>}\n */\nexport function createEventDispatcher() {\n\tconst component = get_current_component();\n\treturn (type, detail, { cancelable = false } = {}) => {\n\t\tconst callbacks = component.$$.callbacks[type];\n\t\tif (callbacks) {\n\t\t\t// TODO are there situations where events could be dispatched\n\t\t\t// in a server (non-DOM) environment?\n\t\t\tconst event = custom_event(/** @type {string} */ (type), detail, { cancelable });\n\t\t\tcallbacks.slice().forEach((fn) => {\n\t\t\t\tfn.call(component, event);\n\t\t\t});\n\t\t\treturn !event.defaultPrevented;\n\t\t}\n\t\treturn true;\n\t};\n}\n\n/**\n * Associates an arbitrary `context` object with the current component and the specified `key`\n * and returns that object. The context is then available to children of the component\n * (including slotted content) with `getContext`.\n *\n * Like lifecycle functions, this must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#setcontext\n * @template T\n * @param {any} key\n * @param {T} context\n * @returns {T}\n */\nexport function setContext(key, context) {\n\tget_current_component().$$.context.set(key, context);\n\treturn context;\n}\n\n/**\n * Retrieves the context that belongs to the closest parent component with the specified `key`.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#getcontext\n * @template T\n * @param {any} key\n * @returns {T}\n */\nexport function getContext(key) {\n\treturn get_current_component().$$.context.get(key);\n}\n\n/**\n * Retrieves the whole context map that belongs to the closest parent component.\n * Must be called during component initialisation. Useful, for example, if you\n * programmatically create a component and want to pass the existing context to it.\n *\n * https://svelte.dev/docs/svelte#getallcontexts\n * @template {Map<any, any>} [T=Map<any, any>]\n * @returns {T}\n */\nexport function getAllContexts() {\n\treturn get_current_component().$$.context;\n}\n\n/**\n * Checks whether a given `key` has been set in the context of a parent component.\n * Must be called during component initialisation.\n *\n * https://svelte.dev/docs/svelte#hascontext\n * @param {any} key\n * @returns {boolean}\n */\nexport function hasContext(key) {\n\treturn get_current_component().$$.context.has(key);\n}\n\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\n/**\n * @param component\n * @param event\n * @returns {void}\n */\nexport function bubble(component, event) {\n\tconst callbacks = component.$$.callbacks[event.type];\n\tif (callbacks) {\n\t\t// @ts-ignore\n\t\tcallbacks.slice().forEach((fn) => fn.call(this, event));\n\t}\n}\n","import { run_all } from './utils.js';\nimport { current_component, set_current_component } from './lifecycle.js';\n\nexport const dirty_components = [];\nexport const intros = { enabled: false };\nexport const binding_callbacks = [];\n\nlet render_callbacks = [];\n\nconst flush_callbacks = [];\n\nconst resolved_promise = /* @__PURE__ */ Promise.resolve();\n\nlet update_scheduled = false;\n\n/** @returns {void} */\nexport function schedule_update() {\n\tif (!update_scheduled) {\n\t\tupdate_scheduled = true;\n\t\tresolved_promise.then(flush);\n\t}\n}\n\n/** @returns {Promise<void>} */\nexport function tick() {\n\tschedule_update();\n\treturn resolved_promise;\n}\n\n/** @returns {void} */\nexport function add_render_callback(fn) {\n\trender_callbacks.push(fn);\n}\n\n/** @returns {void} */\nexport function add_flush_callback(fn) {\n\tflush_callbacks.push(fn);\n}\n\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\n\nlet flushidx = 0; // Do *not* move this inside the flush() function\n\n/** @returns {void} */\nexport function flush() {\n\t// Do not reenter flush while dirty components are updated, as this can\n\t// result in an infinite loop. Instead, let the inner flush handle it.\n\t// Reentrancy is ok afterwards for bindings etc.\n\tif (flushidx !== 0) {\n\t\treturn;\n\t}\n\tconst saved_component = current_component;\n\tdo {\n\t\t// first, call beforeUpdate functions\n\t\t// and update components\n\t\ttry {\n\t\t\twhile (flushidx < dirty_components.length) {\n\t\t\t\tconst component = dirty_components[flushidx];\n\t\t\t\tflushidx++;\n\t\t\t\tset_current_component(component);\n\t\t\t\tupdate(component.$$);\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t// reset dirty state to not end up in a deadlocked state and then rethrow\n\t\t\tdirty_components.length = 0;\n\t\t\tflushidx = 0;\n\t\t\tthrow e;\n\t\t}\n\t\tset_current_component(null);\n\t\tdirty_components.length = 0;\n\t\tflushidx = 0;\n\t\twhile (binding_callbacks.length) binding_callbacks.pop()();\n\t\t// then, once components are updated, call\n\t\t// afterUpdate functions. This may cause\n\t\t// subsequent updates...\n\t\tfor (let i = 0; i < render_callbacks.length; i += 1) {\n\t\t\tconst callback = render_callbacks[i];\n\t\t\tif (!seen_callbacks.has(callback)) {\n\t\t\t\t// ...so guard against infinite loops\n\t\t\t\tseen_callbacks.add(callback);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t}\n\t\trender_callbacks.length = 0;\n\t} while (dirty_components.length);\n\twhile (flush_callbacks.length) {\n\t\tflush_callbacks.pop()();\n\t}\n\tupdate_scheduled = false;\n\tseen_callbacks.clear();\n\tset_current_component(saved_component);\n}\n\n/** @returns {void} */\nfunction update($$) {\n\tif ($$.fragment !== null) {\n\t\t$$.update();\n\t\trun_all($$.before_update);\n\t\tconst dirty = $$.dirty;\n\t\t$$.dirty = [-1];\n\t\t$$.fragment && $$.fragment.p($$.ctx, dirty);\n\t\t$$.after_update.forEach(add_render_callback);\n\t}\n}\n\n/**\n * Useful for example to execute remaining `afterUpdate` callbacks before executing `destroy`.\n * @param {Function[]} fns\n * @returns {void}\n */\nexport function flush_render_callbacks(fns) {\n\tconst filtered = [];\n\tconst targets = [];\n\trender_callbacks.forEach((c) => (fns.indexOf(c) === -1 ? filtered.push(c) : targets.push(c)));\n\ttargets.forEach((c) => c());\n\trender_callbacks = filtered;\n}\n","import { identity as linear, is_function, noop, run_all } from './utils.js';\nimport { now } from './environment.js';\nimport { loop } from './loop.js';\nimport { create_rule, delete_rule } from './style_manager.js';\nimport { custom_event } from './dom.js';\nimport { add_render_callback } from './scheduler.js';\n\n/**\n * @type {Promise<void> | null}\n */\nlet promise;\n\n/**\n * @returns {Promise<void>}\n */\nfunction wait() {\n\tif (!promise) {\n\t\tpromise = Promise.resolve();\n\t\tpromise.then(() => {\n\t\t\tpromise = null;\n\t\t});\n\t}\n\treturn promise;\n}\n\n/**\n * @param {Element} node\n * @param {INTRO | OUTRO | boolean} direction\n * @param {'start' | 'end'} kind\n * @returns {void}\n */\nfunction dispatch(node, direction, kind) {\n\tnode.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\n\nconst outroing = new Set();\n\n/**\n * @type {Outro}\n */\nlet outros;\n\n/**\n * @returns {void} */\nexport function group_outros() {\n\toutros = {\n\t\tr: 0,\n\t\tc: [],\n\t\tp: outros // parent group\n\t};\n}\n\n/**\n * @returns {void} */\nexport function check_outros() {\n\tif (!outros.r) {\n\t\trun_all(outros.c);\n\t}\n\toutros = outros.p;\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} [local]\n * @returns {void}\n */\nexport function transition_in(block, local) {\n\tif (block && block.i) {\n\t\toutroing.delete(block);\n\t\tblock.i(local);\n\t}\n}\n\n/**\n * @param {import('./private.js').Fragment} block\n * @param {0 | 1} local\n * @param {0 | 1} [detach]\n * @param {() => void} [callback]\n * @returns {void}\n */\nexport function transition_out(block, local, detach, callback) {\n\tif (block && block.o) {\n\t\tif (outroing.has(block)) return;\n\t\toutroing.add(block);\n\t\toutros.c.push(() => {\n\t\t\toutroing.delete(block);\n\t\t\tif (callback) {\n\t\t\t\tif (detach) block.d(1);\n\t\t\t\tcallback();\n\t\t\t}\n\t\t});\n\t\tblock.o(local);\n\t} else if (callback) {\n\t\tcallback();\n\t}\n}\n\n/**\n * @type {import('../transition/public.js').TransitionConfig}\n */\nconst null_transition = { duration: 0 };\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ start(): void; invalidate(): void; end(): void; }}\n */\nexport function create_in_transition(node, fn, params) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'in' };\n\tlet config = fn(node, params, options);\n\tlet running = false;\n\tlet animation_name;\n\tlet task;\n\tlet uid = 0;\n\n\t/**\n\t * @returns {void} */\n\tfunction cleanup() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\t\tif (css) animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n\t\ttick(0, 1);\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tif (task) task.abort();\n\t\trunning = true;\n\t\tadd_render_callback(() => dispatch(node, true, 'start'));\n\t\ttask = loop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(1, 0);\n\t\t\t\t\tdispatch(node, true, 'end');\n\t\t\t\t\tcleanup();\n\t\t\t\t\treturn (running = false);\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\tlet started = false;\n\treturn {\n\t\tstart() {\n\t\t\tif (started) return;\n\t\t\tstarted = true;\n\t\t\tdelete_rule(node);\n\t\t\tif (is_function(config)) {\n\t\t\t\tconfig = config(options);\n\t\t\t\twait().then(go);\n\t\t\t} else {\n\t\t\t\tgo();\n\t\t\t}\n\t\t},\n\t\tinvalidate() {\n\t\t\tstarted = false;\n\t\t},\n\t\tend() {\n\t\t\tif (running) {\n\t\t\t\tcleanup();\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @returns {{ end(reset: any): void; }}\n */\nexport function create_out_transition(node, fn, params) {\n\t/** @type {TransitionOptions} */\n\tconst options = { direction: 'out' };\n\tlet config = fn(node, params, options);\n\tlet running = true;\n\tlet animation_name;\n\tconst group = outros;\n\tgroup.r += 1;\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction go() {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\tif (css) animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n\n\t\tconst start_time = now() + delay;\n\t\tconst end_time = start_time + duration;\n\t\tadd_render_callback(() => dispatch(node, false, 'start'));\n\n\t\tif ('inert' in node) {\n\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\tnode.inert = true;\n\t\t}\n\n\t\tloop((now) => {\n\t\t\tif (running) {\n\t\t\t\tif (now >= end_time) {\n\t\t\t\t\ttick(0, 1);\n\t\t\t\t\tdispatch(node, false, 'end');\n\t\t\t\t\tif (!--group.r) {\n\t\t\t\t\t\t// this will result in `end()` being called,\n\t\t\t\t\t\t// so we don't need to clean up here\n\t\t\t\t\t\trun_all(group.c);\n\t\t\t\t\t}\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t\tif (now >= start_time) {\n\t\t\t\t\tconst t = easing((now - start_time) / duration);\n\t\t\t\t\ttick(1 - t, t);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn running;\n\t\t});\n\t}\n\n\tif (is_function(config)) {\n\t\twait().then(() => {\n\t\t\t// @ts-ignore\n\t\t\tconfig = config(options);\n\t\t\tgo();\n\t\t});\n\t} else {\n\t\tgo();\n\t}\n\n\treturn {\n\t\tend(reset) {\n\t\t\tif (reset && 'inert' in node) {\n\t\t\t\tnode.inert = original_inert_value;\n\t\t\t}\n\t\t\tif (reset && config.tick) {\n\t\t\t\tconfig.tick(1, 0);\n\t\t\t}\n\t\t\tif (running) {\n\t\t\t\tif (animation_name) delete_rule(node, animation_name);\n\t\t\t\trunning = false;\n\t\t\t}\n\t\t}\n\t};\n}\n\n/**\n * @param {Element & ElementCSSInlineStyle} node\n * @param {TransitionFn} fn\n * @param {any} params\n * @param {boolean} intro\n * @returns {{ run(b: 0 | 1): void; end(): void; }}\n */\nexport function create_bidirectional_transition(node, fn, params, intro) {\n\t/**\n\t * @type {TransitionOptions} */\n\tconst options = { direction: 'both' };\n\tlet config = fn(node, params, options);\n\tlet t = intro ? 0 : 1;\n\n\t/**\n\t * @type {Program | null} */\n\tlet running_program = null;\n\n\t/**\n\t * @type {PendingProgram | null} */\n\tlet pending_program = null;\n\tlet animation_name = null;\n\n\t/** @type {boolean} */\n\tlet original_inert_value;\n\n\t/**\n\t * @returns {void} */\n\tfunction clear_animation() {\n\t\tif (animation_name) delete_rule(node, animation_name);\n\t}\n\n\t/**\n\t * @param {PendingProgram} program\n\t * @param {number} duration\n\t * @returns {Program}\n\t */\n\tfunction init(program, duration) {\n\t\tconst d = /** @type {Program['d']} */ (program.b - t);\n\t\tduration *= Math.abs(d);\n\t\treturn {\n\t\t\ta: t,\n\t\t\tb: program.b,\n\t\t\td,\n\t\t\tduration,\n\t\t\tstart: program.start,\n\t\t\tend: program.start + duration,\n\t\t\tgroup: program.group\n\t\t};\n\t}\n\n\t/**\n\t * @param {INTRO | OUTRO} b\n\t * @returns {void}\n\t */\n\tfunction go(b) {\n\t\tconst {\n\t\t\tdelay = 0,\n\t\t\tduration = 300,\n\t\t\teasing = linear,\n\t\t\ttick = noop,\n\t\t\tcss\n\t\t} = config || null_transition;\n\n\t\t/**\n\t\t * @type {PendingProgram} */\n\t\tconst program = {\n\t\t\tstart: now() + delay,\n\t\t\tb\n\t\t};\n\n\t\tif (!b) {\n\t\t\t// @ts-ignore todo: improve typings\n\t\t\tprogram.group = outros;\n\t\t\toutros.r += 1;\n\t\t}\n\n\t\tif ('inert' in node) {\n\t\t\tif (b) {\n\t\t\t\tif (original_inert_value !== undefined) {\n\t\t\t\t\t// aborted/reversed outro — restore previous inert value\n\t\t\t\t\tnode.inert = original_inert_value;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toriginal_inert_value = /** @type {HTMLElement} */ (node).inert;\n\t\t\t\tnode.inert = true;\n\t\t\t}\n\t\t}\n\n\t\tif (running_program || pending_program) {\n\t\t\tpending_program = program;\n\t\t} else {\n\t\t\t// if this is an intro, and there's a delay, we need to do\n\t\t\t// an initial tick and/or apply CSS animation immediately\n\t\t\tif (css) {\n\t\t\t\tclear_animation();\n\t\t\t\tanimation_name = create_rule(node, t, b, duration, delay, easing, css);\n\t\t\t}\n\t\t\tif (b) tick(0, 1);\n\t\t\trunning_program = init(program, duration);\n\t\t\tadd_render_callback(() => dispatch(node, b, 'start'));\n\t\t\tloop((now) => {\n\t\t\t\tif (pending_program && now > pending_program.start) {\n\t\t\t\t\trunning_program = init(pending_program, duration);\n\t\t\t\t\tpending_program = null;\n\t\t\t\t\tdispatch(node, running_program.b, 'start');\n\t\t\t\t\tif (css) {\n\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\tanimation_name = create_rule(\n\t\t\t\t\t\t\tnode,\n\t\t\t\t\t\t\tt,\n\t\t\t\t\t\t\trunning_program.b,\n\t\t\t\t\t\t\trunning_program.duration,\n\t\t\t\t\t\t\t0,\n\t\t\t\t\t\t\teasing,\n\t\t\t\t\t\t\tconfig.css\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (running_program) {\n\t\t\t\t\tif (now >= running_program.end) {\n\t\t\t\t\t\ttick((t = running_program.b), 1 - t);\n\t\t\t\t\t\tdispatch(node, running_program.b, 'end');\n\t\t\t\t\t\tif (!pending_program) {\n\t\t\t\t\t\t\t// we're done\n\t\t\t\t\t\t\tif (running_program.b) {\n\t\t\t\t\t\t\t\t// intro — we can tidy up immediately\n\t\t\t\t\t\t\t\tclear_animation();\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t// outro — needs to be coordinated\n\t\t\t\t\t\t\t\tif (!--running_program.group.r) run_all(running_program.group.c);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\trunning_program = null;\n\t\t\t\t\t} else if (now >= running_program.start) {\n\t\t\t\t\t\tconst p = now - running_program.start;\n\t\t\t\t\t\tt = running_program.a + running_program.d * easing(p / running_program.duration);\n\t\t\t\t\t\ttick(t, 1 - t);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn !!(running_program || pending_program);\n\t\t\t});\n\t\t}\n\t}\n\treturn {\n\t\trun(b) {\n\t\t\tif (is_function(config)) {\n\t\t\t\twait().then(() => {\n\t\t\t\t\tconst opts = { direction: b ? 'in' : 'out' };\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tconfig = config(opts);\n\t\t\t\t\tgo(b);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tgo(b);\n\t\t\t}\n\t\t},\n\t\tend() {\n\t\t\tclear_animation();\n\t\t\trunning_program = pending_program = null;\n\t\t}\n\t};\n}\n\n/** @typedef {1} INTRO */\n/** @typedef {0} OUTRO */\n/** @typedef {{ direction: 'in' | 'out' | 'both' }} TransitionOptions */\n/** @typedef {(node: Element, params: any, options: TransitionOptions) => import('../transition/public.js').TransitionConfig} TransitionFn */\n\n/**\n * @typedef {Object} Outro\n * @property {number} r\n * @property {Function[]} c\n * @property {Object} p\n */\n\n/**\n * @typedef {Object} PendingProgram\n * @property {number} start\n * @property {INTRO|OUTRO} b\n * @property {Outro} [group]\n */\n\n/**\n * @typedef {Object} Program\n * @property {number} a\n * @property {INTRO|OUTRO} b\n * @property {1|-1} d\n * @property {number} duration\n * @property {number} start\n * @property {number} end\n * @property {Outro} [group]\n */\n","import {\n\tadd_render_callback,\n\tflush,\n\tflush_render_callbacks,\n\tschedule_update,\n\tdirty_components\n} from './scheduler.js';\nimport { current_component, set_current_component } from './lifecycle.js';\nimport { blank_object, is_empty, is_function, run, run_all, noop } from './utils.js';\nimport {\n\tchildren,\n\tdetach,\n\tstart_hydrating,\n\tend_hydrating,\n\tget_custom_elements_slots,\n\tinsert,\n\telement,\n\tattr\n} from './dom.js';\nimport { transition_in } from './transitions.js';\n\n/** @returns {void} */\nexport function bind(component, name, callback) {\n\tconst index = component.$$.props[name];\n\tif (index !== undefined) {\n\t\tcomponent.$$.bound[index] = callback;\n\t\tcallback(component.$$.ctx[index]);\n\t}\n}\n\n/** @returns {void} */\nexport function create_component(block) {\n\tblock && block.c();\n}\n\n/** @returns {void} */\nexport function claim_component(block, parent_nodes) {\n\tblock && block.l(parent_nodes);\n}\n\n/** @returns {void} */\nexport function mount_component(component, target, anchor) {\n\tconst { fragment, after_update } = component.$$;\n\tfragment && fragment.m(target, anchor);\n\t// onMount happens before the initial afterUpdate\n\tadd_render_callback(() => {\n\t\tconst new_on_destroy = component.$$.on_mount.map(run).filter(is_function);\n\t\t// if the component was destroyed immediately\n\t\t// it will update the `$$.on_destroy` reference to `null`.\n\t\t// the destructured on_destroy may still reference to the old array\n\t\tif (component.$$.on_destroy) {\n\t\t\tcomponent.$$.on_destroy.push(...new_on_destroy);\n\t\t} else {\n\t\t\t// Edge case - component was destroyed immediately,\n\t\t\t// most likely as a result of a binding initialising\n\t\t\trun_all(new_on_destroy);\n\t\t}\n\t\tcomponent.$$.on_mount = [];\n\t});\n\tafter_update.forEach(add_render_callback);\n}\n\n/** @returns {void} */\nexport function destroy_component(component, detaching) {\n\tconst $$ = component.$$;\n\tif ($$.fragment !== null) {\n\t\tflush_render_callbacks($$.after_update);\n\t\trun_all($$.on_destroy);\n\t\t$$.fragment && $$.fragment.d(detaching);\n\t\t// TODO null out other refs, including component.$$ (but need to\n\t\t// preserve final state?)\n\t\t$$.on_destroy = $$.fragment = null;\n\t\t$$.ctx = [];\n\t}\n}\n\n/** @returns {void} */\nfunction make_dirty(component, i) {\n\tif (component.$$.dirty[0] === -1) {\n\t\tdirty_components.push(component);\n\t\tschedule_update();\n\t\tcomponent.$$.dirty.fill(0);\n\t}\n\tcomponent.$$.dirty[(i / 31) | 0] |= 1 << i % 31;\n}\n\n// TODO: Document the other params\n/**\n * @param {SvelteComponent} component\n * @param {import('./public.js').ComponentConstructorOptions} options\n *\n * @param {import('./utils.js')['not_equal']} not_equal Used to compare props and state values.\n * @param {(target: Element | ShadowRoot) => void} [append_styles] Function that appends styles to the DOM when the component is first initialised.\n * This will be the `add_css` function from the compiled component.\n *\n * @returns {void}\n */\nexport function init(\n\tcomponent,\n\toptions,\n\tinstance,\n\tcreate_fragment,\n\tnot_equal,\n\tprops,\n\tappend_styles = null,\n\tdirty = [-1]\n) {\n\tconst parent_component = current_component;\n\tset_current_component(component);\n\t/** @type {import('./private.js').T$$} */\n\tconst $$ = (component.$$ = {\n\t\tfragment: null,\n\t\tctx: [],\n\t\t// state\n\t\tprops,\n\t\tupdate: noop,\n\t\tnot_equal,\n\t\tbound: blank_object(),\n\t\t// lifecycle\n\t\ton_mount: [],\n\t\ton_destroy: [],\n\t\ton_disconnect: [],\n\t\tbefore_update: [],\n\t\tafter_update: [],\n\t\tcontext: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n\t\t// everything else\n\t\tcallbacks: blank_object(),\n\t\tdirty,\n\t\tskip_bound: false,\n\t\troot: options.target || parent_component.$$.root\n\t});\n\tappend_styles && append_styles($$.root);\n\tlet ready = false;\n\t$$.ctx = instance\n\t\t? instance(component, options.props || {}, (i, ret, ...rest) => {\n\t\t\t\tconst value = rest.length ? rest[0] : ret;\n\t\t\t\tif ($$.ctx && not_equal($$.ctx[i], ($$.ctx[i] = value))) {\n\t\t\t\t\tif (!$$.skip_bound && $$.bound[i]) $$.bound[i](value);\n\t\t\t\t\tif (ready) make_dirty(component, i);\n\t\t\t\t}\n\t\t\t\treturn ret;\n\t\t  })\n\t\t: [];\n\t$$.update();\n\tready = true;\n\trun_all($$.before_update);\n\t// `false` as a special case of no DOM component\n\t$$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n\tif (options.target) {\n\t\tif (options.hydrate) {\n\t\t\tstart_hydrating();\n\t\t\t// TODO: what is the correct type here?\n\t\t\t// @ts-expect-error\n\t\t\tconst nodes = children(options.target);\n\t\t\t$$.fragment && $$.fragment.l(nodes);\n\t\t\tnodes.forEach(detach);\n\t\t} else {\n\t\t\t// eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n\t\t\t$$.fragment && $$.fragment.c();\n\t\t}\n\t\tif (options.intro) transition_in(component.$$.fragment);\n\t\tmount_component(component, options.target, options.anchor);\n\t\tend_hydrating();\n\t\tflush();\n\t}\n\tset_current_component(parent_component);\n}\n\nexport let SvelteElement;\n\nif (typeof HTMLElement === 'function') {\n\tSvelteElement = class extends HTMLElement {\n\t\t/** The Svelte component constructor */\n\t\t$$ctor;\n\t\t/** Slots */\n\t\t$$s;\n\t\t/** The Svelte component instance */\n\t\t$$c;\n\t\t/** Whether or not the custom element is connected */\n\t\t$$cn = false;\n\t\t/** Component props data */\n\t\t$$d = {};\n\t\t/** `true` if currently in the process of reflecting component props back to attributes */\n\t\t$$r = false;\n\t\t/** @type {Record<string, CustomElementPropDefinition>} Props definition (name, reflected, type etc) */\n\t\t$$p_d = {};\n\t\t/** @type {Record<string, Function[]>} Event listeners */\n\t\t$$l = {};\n\t\t/** @type {Map<Function, Function>} Event listener unsubscribe functions */\n\t\t$$l_u = new Map();\n\n\t\tconstructor($$componentCtor, $$slots, use_shadow_dom) {\n\t\t\tsuper();\n\t\t\tthis.$$ctor = $$componentCtor;\n\t\t\tthis.$$s = $$slots;\n\t\t\tif (use_shadow_dom) {\n\t\t\t\tthis.attachShadow({ mode: 'open' });\n\t\t\t}\n\t\t}\n\n\t\taddEventListener(type, listener, options) {\n\t\t\t// We can't determine upfront if the event is a custom event or not, so we have to\n\t\t\t// listen to both. If someone uses a custom event with the same name as a regular\n\t\t\t// browser event, this fires twice - we can't avoid that.\n\t\t\tthis.$$l[type] = this.$$l[type] || [];\n\t\t\tthis.$$l[type].push(listener);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t}\n\t\t\tsuper.addEventListener(type, listener, options);\n\t\t}\n\n\t\tremoveEventListener(type, listener, options) {\n\t\t\tsuper.removeEventListener(type, listener, options);\n\t\t\tif (this.$$c) {\n\t\t\t\tconst unsub = this.$$l_u.get(listener);\n\t\t\t\tif (unsub) {\n\t\t\t\t\tunsub();\n\t\t\t\t\tthis.$$l_u.delete(listener);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tasync connectedCallback() {\n\t\t\tthis.$$cn = true;\n\t\t\tif (!this.$$c) {\n\t\t\t\t// We wait one tick to let possible child slot elements be created/mounted\n\t\t\t\tawait Promise.resolve();\n\t\t\t\tif (!this.$$cn || this.$$c) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tfunction create_slot(name) {\n\t\t\t\t\treturn () => {\n\t\t\t\t\t\tlet node;\n\t\t\t\t\t\tconst obj = {\n\t\t\t\t\t\t\tc: function create() {\n\t\t\t\t\t\t\t\tnode = element('slot');\n\t\t\t\t\t\t\t\tif (name !== 'default') {\n\t\t\t\t\t\t\t\t\tattr(node, 'name', name);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t/**\n\t\t\t\t\t\t\t * @param {HTMLElement} target\n\t\t\t\t\t\t\t * @param {HTMLElement} [anchor]\n\t\t\t\t\t\t\t */\n\t\t\t\t\t\t\tm: function mount(target, anchor) {\n\t\t\t\t\t\t\t\tinsert(target, node, anchor);\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\td: function destroy(detaching) {\n\t\t\t\t\t\t\t\tif (detaching) {\n\t\t\t\t\t\t\t\t\tdetach(node);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t};\n\t\t\t\t\t\treturn obj;\n\t\t\t\t\t};\n\t\t\t\t}\n\t\t\t\tconst $$slots = {};\n\t\t\t\tconst existing_slots = get_custom_elements_slots(this);\n\t\t\t\tfor (const name of this.$$s) {\n\t\t\t\t\tif (name in existing_slots) {\n\t\t\t\t\t\t$$slots[name] = [create_slot(name)];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tfor (const attribute of this.attributes) {\n\t\t\t\t\t// this.$$data takes precedence over this.attributes\n\t\t\t\t\tconst name = this.$$g_p(attribute.name);\n\t\t\t\t\tif (!(name in this.$$d)) {\n\t\t\t\t\t\tthis.$$d[name] = get_custom_element_value(name, attribute.value, this.$$p_d, 'toProp');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t// Port over props that were set programmatically before ce was initialized\n\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\tif (!(key in this.$$d) && this[key] !== undefined) {\n\t\t\t\t\t\tthis.$$d[key] = this[key]; // don't transform, these were set through JavaScript\n\t\t\t\t\t\tdelete this[key]; // remove the property that shadows the getter/setter\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$c = new this.$$ctor({\n\t\t\t\t\ttarget: this.shadowRoot || this,\n\t\t\t\t\tprops: {\n\t\t\t\t\t\t...this.$$d,\n\t\t\t\t\t\t$$slots,\n\t\t\t\t\t\t$$scope: {\n\t\t\t\t\t\t\tctx: []\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\t// Reflect component props as attributes\n\t\t\t\tconst reflect_attributes = () => {\n\t\t\t\t\tthis.$$r = true;\n\t\t\t\t\tfor (const key in this.$$p_d) {\n\t\t\t\t\t\tthis.$$d[key] = this.$$c.$$.ctx[this.$$c.$$.props[key]];\n\t\t\t\t\t\tif (this.$$p_d[key].reflect) {\n\t\t\t\t\t\t\tconst attribute_value = get_custom_element_value(\n\t\t\t\t\t\t\t\tkey,\n\t\t\t\t\t\t\t\tthis.$$d[key],\n\t\t\t\t\t\t\t\tthis.$$p_d,\n\t\t\t\t\t\t\t\t'toAttribute'\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\tif (attribute_value == null) {\n\t\t\t\t\t\t\t\tthis.removeAttribute(this.$$p_d[key].attribute || key);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.setAttribute(this.$$p_d[key].attribute || key, attribute_value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tthis.$$r = false;\n\t\t\t\t};\n\t\t\t\tthis.$$c.$$.after_update.push(reflect_attributes);\n\t\t\t\treflect_attributes(); // once initially because after_update is added too late for first render\n\n\t\t\t\tfor (const type in this.$$l) {\n\t\t\t\t\tfor (const listener of this.$$l[type]) {\n\t\t\t\t\t\tconst unsub = this.$$c.$on(type, listener);\n\t\t\t\t\t\tthis.$$l_u.set(listener, unsub);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.$$l = {};\n\t\t\t}\n\t\t}\n\n\t\t// We don't need this when working within Svelte code, but for compatibility of people using this outside of Svelte\n\t\t// and setting attributes through setAttribute etc, this is helpful\n\t\tattributeChangedCallback(attr, _oldValue, newValue) {\n\t\t\tif (this.$$r) return;\n\t\t\tattr = this.$$g_p(attr);\n\t\t\tthis.$$d[attr] = get_custom_element_value(attr, newValue, this.$$p_d, 'toProp');\n\t\t\tthis.$$c?.$set({ [attr]: this.$$d[attr] });\n\t\t}\n\n\t\tdisconnectedCallback() {\n\t\t\tthis.$$cn = false;\n\t\t\t// In a microtask, because this could be a move within the DOM\n\t\t\tPromise.resolve().then(() => {\n\t\t\t\tif (!this.$$cn && this.$$c) {\n\t\t\t\t\tthis.$$c.$destroy();\n\t\t\t\t\tthis.$$c = undefined;\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t$$g_p(attribute_name) {\n\t\t\treturn (\n\t\t\t\tObject.keys(this.$$p_d).find(\n\t\t\t\t\t(key) =>\n\t\t\t\t\t\tthis.$$p_d[key].attribute === attribute_name ||\n\t\t\t\t\t\t(!this.$$p_d[key].attribute && key.toLowerCase() === attribute_name)\n\t\t\t\t) || attribute_name\n\t\t\t);\n\t\t}\n\t};\n}\n\n/**\n * @param {string} prop\n * @param {any} value\n * @param {Record<string, CustomElementPropDefinition>} props_definition\n * @param {'toAttribute' | 'toProp'} [transform]\n */\nfunction get_custom_element_value(prop, value, props_definition, transform) {\n\tconst type = props_definition[prop]?.type;\n\tvalue = type === 'Boolean' && typeof value !== 'boolean' ? value != null : value;\n\tif (!transform || !props_definition[prop]) {\n\t\treturn value;\n\t} else if (transform === 'toAttribute') {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value == null ? null : JSON.stringify(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value ? '' : null;\n\t\t\tcase 'Number':\n\t\t\t\treturn value == null ? null : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t} else {\n\t\tswitch (type) {\n\t\t\tcase 'Object':\n\t\t\tcase 'Array':\n\t\t\t\treturn value && JSON.parse(value);\n\t\t\tcase 'Boolean':\n\t\t\t\treturn value; // conversion already handled above\n\t\t\tcase 'Number':\n\t\t\t\treturn value != null ? +value : value;\n\t\t\tdefault:\n\t\t\t\treturn value;\n\t\t}\n\t}\n}\n\n/**\n * @internal\n *\n * Turn a Svelte component into a custom element.\n * @param {import('./public.js').ComponentType} Component  A Svelte component constructor\n * @param {Record<string, CustomElementPropDefinition>} props_definition  The props to observe\n * @param {string[]} slots  The slots to create\n * @param {string[]} accessors  Other accessors besides the ones for props the component has\n * @param {boolean} use_shadow_dom  Whether to use shadow DOM\n * @param {(ce: new () => HTMLElement) => new () => HTMLElement} [extend]\n */\nexport function create_custom_element(\n\tComponent,\n\tprops_definition,\n\tslots,\n\taccessors,\n\tuse_shadow_dom,\n\textend\n) {\n\tlet Class = class extends SvelteElement {\n\t\tconstructor() {\n\t\t\tsuper(Component, slots, use_shadow_dom);\n\t\t\tthis.$$p_d = props_definition;\n\t\t}\n\t\tstatic get observedAttributes() {\n\t\t\treturn Object.keys(props_definition).map((key) =>\n\t\t\t\t(props_definition[key].attribute || key).toLowerCase()\n\t\t\t);\n\t\t}\n\t};\n\tObject.keys(props_definition).forEach((prop) => {\n\t\tObject.defineProperty(Class.prototype, prop, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c && prop in this.$$c ? this.$$c[prop] : this.$$d[prop];\n\t\t\t},\n\t\t\tset(value) {\n\t\t\t\tvalue = get_custom_element_value(prop, value, props_definition);\n\t\t\t\tthis.$$d[prop] = value;\n\t\t\t\tthis.$$c?.$set({ [prop]: value });\n\t\t\t}\n\t\t});\n\t});\n\taccessors.forEach((accessor) => {\n\t\tObject.defineProperty(Class.prototype, accessor, {\n\t\t\tget() {\n\t\t\t\treturn this.$$c?.[accessor];\n\t\t\t}\n\t\t});\n\t});\n\tif (extend) {\n\t\t// @ts-expect-error - assigning here is fine\n\t\tClass = extend(Class);\n\t}\n\tComponent.element = /** @type {any} */ (Class);\n\treturn Class;\n}\n\n/**\n * Base class for Svelte components. Used when dev=false.\n *\n * @template {Record<string, any>} [Props=any]\n * @template {Record<string, any>} [Events=any]\n */\nexport class SvelteComponent {\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$ = undefined;\n\t/**\n\t * ### PRIVATE API\n\t *\n\t * Do not use, may change at any time\n\t *\n\t * @type {any}\n\t */\n\t$$set = undefined;\n\n\t/** @returns {void} */\n\t$destroy() {\n\t\tdestroy_component(this, 1);\n\t\tthis.$destroy = noop;\n\t}\n\n\t/**\n\t * @template {Extract<keyof Events, string>} K\n\t * @param {K} type\n\t * @param {((e: Events[K]) => void) | null | undefined} callback\n\t * @returns {() => void}\n\t */\n\t$on(type, callback) {\n\t\tif (!is_function(callback)) {\n\t\t\treturn noop;\n\t\t}\n\t\tconst callbacks = this.$$.callbacks[type] || (this.$$.callbacks[type] = []);\n\t\tcallbacks.push(callback);\n\t\treturn () => {\n\t\t\tconst index = callbacks.indexOf(callback);\n\t\t\tif (index !== -1) callbacks.splice(index, 1);\n\t\t};\n\t}\n\n\t/**\n\t * @param {Partial<Props>} props\n\t * @returns {void}\n\t */\n\t$set(props) {\n\t\tif (this.$$set && !is_empty(props)) {\n\t\t\tthis.$$.skip_bound = true;\n\t\t\tthis.$$set(props);\n\t\t\tthis.$$.skip_bound = false;\n\t\t}\n\t}\n}\n\n/**\n * @typedef {Object} CustomElementPropDefinition\n * @property {string} [attribute]\n * @property {boolean} [reflect]\n * @property {'String'|'Boolean'|'Number'|'Array'|'Object'} [type]\n */\n","// generated during release, do not modify\n\n/**\n * The current version, as set in package.json.\n *\n * https://svelte.dev/docs/svelte-compiler#svelte-version\n * @type {string}\n */\nexport const VERSION = '4.2.18';\nexport const PUBLIC_VERSION = '4';\n","import { PUBLIC_VERSION } from '../../../shared/version.js';\n\nif (typeof window !== 'undefined')\n\t// @ts-ignore\n\t(window.__svelte || (window.__svelte = { v: new Set() })).v.add(PUBLIC_VERSION);\n","class n extends Error {\n  constructor(e) {\n    super(e);\n  }\n}\nconst S = [0, 1, 3, 7, 15, 31, 63, 127, 255];\nclass m {\n  decodeVInt(e) {\n    if (e.length <= 0)\n      throw new n(\"invalid VInt\");\n    let t = BigInt(0);\n    for (let i = 0; i < e.length; i++) {\n      const r = e[i];\n      if (i < e.length - 1) {\n        if (r & 128)\n          throw new n(\"invalid VInt\");\n        t = t * BigInt(128) + BigInt(r & 127);\n      } else {\n        if ((r & 128) !== 128)\n          throw new n(\"invalid VInt\");\n        t = t * BigInt(64) + BigInt(r & 63);\n        break;\n      }\n    }\n    return t >= BigInt(Number.MIN_SAFE_INTEGER) && t <= BigInt(Number.MAX_SAFE_INTEGER) ? Number(t) : t;\n  }\n  decodeZigZag(e) {\n    if (e < 0)\n      throw new n(\"illegal zigzag value\");\n    if (typeof e == \"bigint\") {\n      if (e <= BigInt(2147483647))\n        return e % BigInt(2) === BigInt(1) ? Number(-(e >> BigInt(1)) - BigInt(1)) : Number(e >> BigInt(1));\n      if (e % BigInt(2) === BigInt(1)) {\n        const t = (e - BigInt(1)) / BigInt(2);\n        return Number(-t - BigInt(1));\n      } else {\n        const t = e / BigInt(2);\n        return Number(t);\n      }\n    } else\n      return e <= 2147483647 ? e % 2 === 1 ? -(e >> 1) - 1 : e >> 1 : e % 2 === 1 ? -((e - 1) / 2) - 1 : e / 2;\n  }\n  decodeAscii(e) {\n    return new TextDecoder(\"ascii\").decode(e);\n  }\n  decodeUtf8(e) {\n    return new TextDecoder(\"utf8\").decode(e);\n  }\n  toDataView(e) {\n    const t = new ArrayBuffer(e.length), i = new DataView(t);\n    for (let r = 0; r < e.length; r++)\n      i.setUint8(r, e[r]);\n    return i;\n  }\n  // big-endian encoding\n  decodeFloat32(e) {\n    return this.toDataView(e).getFloat32(0, !1);\n  }\n  // big-endian encoding\n  decodeFloat64(e) {\n    return this.toDataView(e).getFloat64(0, !1);\n  }\n  decodeFixedLengthBigEndianEncodedBits(e, t) {\n    const i = new Uint8Array(Math.ceil(t / 8));\n    let r = 0, s = t % 7, o = 0, a = 0, c = e[r], d = 0, h;\n    for (; r < e.length; ) {\n      const g = Math.min(s, 8 - a);\n      d <<= g, d |= c >> s - g, s -= g, c &= S[s], a += g, s === 0 && (r++, s = 7, c = e[r]), a === 8 && (h = o, i[h] = d, o++, a = 0, d = 0);\n    }\n    return a > 0 && (d <<= 8 - a, h = o, i[h] = d), i;\n  }\n  decodeSafeBinaryEncodedBits(e, t) {\n    const i = new Uint8Array(Math.ceil(t / 8));\n    let r = 0, s = 7, o = 0, a = 0, c = e[r], d = 0;\n    for (; o < i.length; ) {\n      const h = Math.min(s, 8 - a);\n      d <<= h, d |= c >> s - h, s -= h, c &= S[s], a += h, s === 0 && (r++, s = 7, c = e[r]), a === 8 && (i[o] = d, o++, a = 0, d = 0);\n    }\n    return a > 0 && (d <<= 8 - a, i[o] = d), i;\n  }\n}\nclass w {\n  constructor(e) {\n    this.inputStream = e, this.decoder = new m();\n  }\n  isEof() {\n    return this.inputStream.isEof();\n  }\n  read() {\n    return this.inputStream.read();\n  }\n  peek() {\n    return this.inputStream.peek();\n  }\n  readVIntBytes() {\n    const e = [];\n    for (; ; ) {\n      const t = this.read();\n      if (e.push(t), (t & 128) === 128)\n        break;\n    }\n    return new Uint8Array(e);\n  }\n  readUnsignedVint() {\n    const e = this.readVIntBytes();\n    return this.decoder.decodeVInt(e);\n  }\n  readSignedVint() {\n    return this.decoder.decodeZigZag(this.readUnsignedVint());\n  }\n  readAscii(e) {\n    return this.decoder.decodeAscii(this.inputStream.readArray(e));\n  }\n  readUtf8(e) {\n    return this.decoder.decodeUtf8(this.inputStream.readArray(e));\n  }\n  readFloat32() {\n    return this.decoder.decodeFloat32(this.readFixedLengthBigEndianEncodedBits(32));\n  }\n  readFloat64() {\n    return this.decoder.decodeFloat64(this.readFixedLengthBigEndianEncodedBits(64));\n  }\n  readFixedLengthBigEndianEncodedBits(e) {\n    const t = this.inputStream.readArray(Math.ceil(e / 7));\n    return this.decoder.decodeFixedLengthBigEndianEncodedBits(t, e);\n  }\n  readSafeBinary() {\n    const e = this.readUnsignedVint();\n    if (typeof e == \"bigint\")\n      throw new n(\"invalid length\");\n    const t = this.inputStream.readArray(Math.ceil(e * 8 / 7));\n    return this.decoder.decodeSafeBinaryEncodedBits(t, e * 8);\n  }\n  readBigInt() {\n    const e = this.readSafeBinary();\n    let t = 0;\n    for (let i = 0; i < e.length; i++)\n      t = t * 256 + e[i];\n    return t;\n  }\n  readBigDecimal() {\n    const e = this.readSignedVint();\n    if (typeof e == \"bigint\")\n      throw new n(\"invalid scale\");\n    return this.readBigInt() * Math.pow(10, e);\n  }\n  readLongString() {\n    const e = [];\n    for (; ; ) {\n      const t = this.inputStream.read();\n      if (t === 252)\n        break;\n      e.push(t);\n    }\n    return new Uint8Array(e);\n  }\n  readLongAscii() {\n    return this.decoder.decodeAscii(this.readLongString());\n  }\n  readLongUtf8() {\n    return this.decoder.decodeUtf8(this.readLongString());\n  }\n  readBytes(e) {\n    return this.inputStream.readArray(e);\n  }\n}\nconst f = new n(\"end of input stream reached\");\nclass y {\n  constructor(e) {\n    this.index = 0, this.array = e;\n  }\n  isEof() {\n    return this.index >= this.array.length;\n  }\n  read() {\n    if (this.isEof())\n      throw f;\n    const e = this.array[this.index];\n    return this.index++, e;\n  }\n  readArray(e) {\n    if (this.isEof())\n      throw f;\n    if (e < 0)\n      throw new n(\"invalid read amount\");\n    const t = Math.min(this.array.length, this.index + e), i = this.array.subarray(this.index, t);\n    return this.index = t, i;\n  }\n  peek() {\n    if (this.isEof())\n      throw f;\n    return this.array[this.index];\n  }\n  skip(e) {\n    if (this.isEof())\n      throw f;\n    if (e < 0)\n      throw new n(\"invalid skip amount\");\n    this.index += e;\n  }\n}\nclass u {\n  constructor(e, t, i, r) {\n    this.name = e, this.keyMode = t, this.enabled = i, this.maxStrings = r, this.reset(), this.strings = [], this.stringMap = {}, this.reset();\n  }\n  reset() {\n    this.keyMode ? (this.strings = [], this.stringMap = {}) : (this.strings = [\"\"], this.stringMap = {});\n  }\n  static newValues(e) {\n    return new u(\"values\", !1, e, 1024);\n  }\n  static newKeyNames(e) {\n    return new u(\"keyNames\", !0, e, 1024);\n  }\n  addString(e) {\n    if (!this.enabled || new TextEncoder().encode(e).length > 64)\n      return -1;\n    if (e in this.stringMap)\n      return this.stringMap[e];\n    this.keyMode ? this.strings.length >= this.maxStrings && this.reset() : this.strings.length > this.maxStrings && this.reset();\n    const i = this.strings.length;\n    return this.strings.push(e), this.stringMap[e] = i, i;\n  }\n  getString(e) {\n    if (!this.enabled)\n      throw new n(\"shared strings are not enabled\");\n    if (e >= this.strings.length)\n      throw new n(\"shared string reference out of range\");\n    return this.strings[e];\n  }\n}\nfunction B(l, e) {\n  return new p(l, e).parse();\n}\nclass p {\n  constructor(e, t) {\n    this.decoderStream = new w(new y(e)), this.options = t, this.decoder = new m(), this.sharedPropertyName = !1, this.sharedStringValue = !1, this.rawBinary = !1, this.version = 0, this.sharedPropertyNames = u.newKeyNames(!1), this.sharedStringValues = u.newValues(!1);\n  }\n  parse() {\n    const e = this.decoderStream.read(), t = this.decoderStream.read(), i = this.decoderStream.read();\n    if (e !== 58 || t !== 41 || i !== 10)\n      throw new n(\"invalid Smile header\");\n    const r = this.decoderStream.read();\n    return this.sharedPropertyName = (r & 1) === 1, this.sharedStringValue = (r & 2) === 2, this.rawBinary = (r & 4) === 4, this.version = r >> 4, this.sharedPropertyNames = u.newKeyNames(this.sharedPropertyName), this.sharedStringValues = u.newValues(this.sharedStringValue), this.readValue();\n  }\n  readValue() {\n    const e = this.decoderStream.read(), t = e >> 5, i = e & 31;\n    switch (t) {\n      case 0:\n        return this.sharedStringValues.getString(i);\n      case 1:\n        return this.readSimpleLiteralValue(e);\n      case 2: {\n        const r = this.decoderStream.readAscii(i + 1);\n        return this.sharedStringValues.addString(r), r;\n      }\n      case 3: {\n        const r = this.decoderStream.readAscii(i + 33);\n        return this.sharedStringValues.addString(r), r;\n      }\n      case 4: {\n        const r = this.decoderStream.readUtf8(i + 2);\n        return this.sharedStringValues.addString(r), r;\n      }\n      case 5: {\n        const r = this.decoderStream.readUtf8(i + 34);\n        return this.sharedStringValues.addString(r), r;\n      }\n      case 6:\n        return this.decoder.decodeZigZag(i);\n      case 7:\n        return this.readBinaryLongTextStructureValues(e);\n      default:\n        throw new n(`unknown token class: ${t}`);\n    }\n  }\n  readSimpleLiteralValue(e) {\n    if (e === 32)\n      return \"\";\n    if (e === 33)\n      return null;\n    if (e === 34)\n      return !1;\n    if (e === 35)\n      return !0;\n    if (e === 36)\n      return this.decoderStream.readSignedVint();\n    if (e === 37)\n      return this.decoderStream.readSignedVint();\n    if (e === 38)\n      return this.decoderStream.readBigInt();\n    if (e === 40)\n      return this.decoderStream.readFloat32();\n    if (e === 41)\n      return this.decoderStream.readFloat64();\n    if (e === 42)\n      return this.decoderStream.readBigDecimal();\n    throw new n(\"invalid value token 0x\" + e.toString(16));\n  }\n  readBinaryLongTextStructureValues(e) {\n    if (e === 224)\n      return this.decoderStream.readLongAscii();\n    if (e === 228)\n      return this.decoderStream.readLongUtf8();\n    if (e === 232)\n      return this.decoderStream.readSafeBinary();\n    if (e >= 236 && e <= 239) {\n      const t = (e & 3) << 8 | this.decoderStream.read();\n      return this.sharedStringValues.getString(t);\n    } else if (e === 248) {\n      const t = [];\n      for (; this.decoderStream.peek() !== 249; )\n        t.push(this.readValue());\n      return this.decoderStream.read(), t;\n    } else if (e === 250) {\n      const t = {};\n      for (; this.decoderStream.peek() !== 251; ) {\n        const i = this.readKey(), r = this.readValue();\n        t[i] = r;\n      }\n      return this.decoderStream.read(), t;\n    } else if (e === 253) {\n      const t = this.decoderStream.readUnsignedVint();\n      if (typeof t == \"bigint\")\n        throw new n(\"invalid length\");\n      return this.decoderStream.readBytes(t);\n    } else\n      throw new n(\"invalid value token 0x\" + e.toString(16));\n  }\n  readKey() {\n    const e = this.decoderStream.read();\n    if (e === 32)\n      return \"\";\n    if (e >= 48 && e <= 51) {\n      const t = (e & 3) << 8 | this.decoderStream.read();\n      return this.sharedPropertyNames.getString(t);\n    } else {\n      if (e === 52)\n        return this.decoderStream.readLongUtf8();\n      if (e >= 64 && e <= 127) {\n        const t = e & 63;\n        return this.sharedPropertyNames.getString(t);\n      } else if (e >= 128 && e <= 191) {\n        const t = this.decoderStream.readAscii((e & 63) + 1);\n        return this.sharedPropertyNames.addString(t), t;\n      } else if (e >= 192 && e <= 247) {\n        const t = this.decoderStream.readUtf8((e & 63) + 2);\n        return this.sharedPropertyNames.addString(t), t;\n      } else\n        throw new n(\"invalid key token 0x\" + e.toString(16));\n    }\n  }\n}\nexport {\n  n as SmileError,\n  B as parse\n};\n//# sourceMappingURL=smile-js.js.map\n","<script lang=\"ts\">\n    import {parse} from 'smile-js';\n\n    let json: string = '';\n\n    function onChooseFile(e: Event) {\n        const target = e.target as HTMLInputElement;\n        if (!target.files || (target.files.length < 1)) {\n            return;\n        }\n        const file = target.files.item(0)\n        if (!file) {\n            return;\n        }\n        file.arrayBuffer()\n            .then(arrayBuffer => {\n                const data = new Uint8Array(arrayBuffer);\n                try {\n                    const o = parse(data);\n                    console.log(o);\n                    json = JSON.stringify(o, null, 2);\n                } catch (e) {\n                    alert(e);\n                }\n            })\n            .catch(e => {\n                alert(e);\n            });\n    }\n</script>\n\n<div>\n    <label for=\"file\">Select SMILE-encoded file</label>\n    <input id=\"file\" type=\"file\" on:change={onChooseFile}/>\n</div>\n<div>\n    <label for=\"output\">JSON representation:</label>\n    <pre id=\"output\">{json}</pre>\n</div>\n","import App from './App.svelte';\n\nconst app = new App({\n    target: document.body,\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","run_all","fns","is_function","thing","safe_not_equal","a","b","is_empty","obj","append","target","node","insert","anchor","detach","element","name","text","data","space","listen","event","handler","options","attr","attribute","value","children","set_data","current_component","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","update_scheduled","schedule_update","flush","add_render_callback","seen_callbacks","flushidx","saved_component","update","i","callback","$$","dirty","flush_render_callbacks","filtered","targets","c","outroing","transition_in","block","local","mount_component","fragment","after_update","new_on_destroy","destroy_component","detaching","make_dirty","init","instance","create_fragment","not_equal","props","append_styles","parent_component","ready","ret","rest","nodes","SvelteComponent","__publicField","type","callbacks","index","PUBLIC_VERSION","n","S","m","r","s","o","d","h","g","w","f","y","u","B","l","p","ctx","div0","label0","input","div1","label1","pre","json","onChooseFile","e","file","arrayBuffer","parse","$$invalidate","App"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8]}